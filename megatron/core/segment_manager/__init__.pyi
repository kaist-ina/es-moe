import torch

def initialize(rank: int, options: dict) -> None: ...

def pre_forward_hook(layer: int, expert: int) -> None: ...
def post_forward_hook(layer: int, expert: int) -> None: ...
def pre_backward_hook(layer: int, expert: int) -> None: ...
def post_backward_hook(layer: int, expert: int) -> None: ...
def pre_optimize_hook(layer: int, expert: int) -> None: ...
def post_optimize_hook(layer: int, expert: int) -> None: ...

def shared_pinned_memory (tensor: torch.Tensor, rank: int, layer: int, expert: int, order: int, type: int, pinning: bool = True) -> torch.Tensor: ...